[{"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/index.js":"1","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/reportWebVitals.js":"2","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/App.js":"3","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/container.js":"4","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/header.js":"5","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/utils/API.js":"6","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/search.js":"7","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/table.js":"8","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/tablehead.js":"9"},{"size":500,"mtime":1610680924060,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610680924061,"results":"12","hashOfConfig":"11"},{"size":270,"mtime":1610682834934,"results":"13","hashOfConfig":"11"},{"size":2247,"mtime":1610683734757,"results":"14","hashOfConfig":"11"},{"size":163,"mtime":1610683591907,"results":"15","hashOfConfig":"16"},{"size":174,"mtime":1610683308994,"results":"17","hashOfConfig":"11"},{"size":203,"mtime":1610683580147,"results":"18","hashOfConfig":"11"},{"size":960,"mtime":1610683731395,"results":"19","hashOfConfig":"11"},{"size":239,"mtime":1610683526007,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1ss0r95",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1odo9l6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/index.js",[],["41","42"],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/reportWebVitals.js",[],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/App.js",["43"],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/container.js",["44","45"],"import React, { Component } from \"react\"\nimport Search from './search'\nimport API from '../utils/API'\nimport Table from './table'\n\nclass Container extends Component {\n    state = { employees: [] }\n    initialEmployeelist;\n    componentDidMount() {\n        this.getEmployees()\n    }\n    getEmployees = () => {\n        API.getEmployees().then((res) => {\n            this.initialEmployeeList = res.data.results;\n            this.setState({ employees: res.data.results });\n        }).catch((err) => console.log(err))\n    }\n    handleInputChange = (event) => {\n        console.log(\"this.handleInputChange\")\n        const searchName = event.target.value\n        if (searchName) {\n            this.searchNames(searchName);\n        } else if (!searchName) {\n            this.setState({ employees: this.initialEmployeeList });\n        }\n    }\n    searchNames = (searchName) => {\n        const filteredEmployees = this.initialEmployeeList.filter((employee) => {\n            let uppercaseFirstName = employee.name.first.toUpperCase();\n            let uppercaseSearchName = searchName.toUpperCase();\n            if (\n                employee.name.first.toUpperCase().includes(uppercaseSearchName) ||\n                employee.name.last.toUpperCase().includes(uppercaseSearchName)\n            ) {\n                return employee;\n            }\n        });\n        console.log(filteredEmployees);\n        this.setState({ employees: filteredEmployees });\n    }\n    sortNames = () => {\n        console.log(\"name\")\n        let sortedEmployees = this.state.employees;\n        console.log(sortedEmployees);\n        sortedEmployees.sort(function (a, b) {\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n            return 0;\n        });\n        this.setState({ employees: sortedEmployees });\n    }\n    render() {\n        return (\n            <div>\n                <Search handleInputChange={this.handleInputChange} />\n                <Table employees={this.state.employees} sortNames={this.sortNames} />\n            </div>\n        )\n    }\n}\nexport default Container","/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/header.js",[],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/utils/API.js",[],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/search.js",[],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/table.js",[],"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/tablehead.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"55","line":28,"column":78,"nodeType":"56","messageId":"57","endLine":28,"endColumn":80},{"ruleId":"50","severity":1,"message":"58","line":29,"column":17,"nodeType":"52","messageId":"53","endLine":29,"endColumn":35},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'uppercaseFirstName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]