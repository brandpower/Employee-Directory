{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/container.js\";\nimport React, { Component } from \"react\";\nimport Search from './search';\nimport API from '../utils/API';\nimport Table from './table';\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: []\n    };\n\n    this.getEmployees = () => {\n      API.getEmployees().then(res => {\n        this.initialEmployeeList = res.data.results;\n        this.setState({\n          employees: res.data.results\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      console.log(\"this.handleInputChange\");\n      const searchName = event.target.value;\n\n      if (searchName) {\n        this.searchNames(searchName);\n      } else if (!searchName) {\n        this.setState({\n          employees: this.initialEmployeeList\n        });\n      }\n    };\n\n    this.searchNames = searchName => {\n      const filteredEmployees = this.initialEmployeeList.filter(employee => {\n        let uppercaseFirstName = employee.name.first.toUpperCase();\n        let uppercaseSearchName = searchName.toUpperCase();\n\n        if (employee.name.first.toUpperCase().includes(uppercaseSearchName) || employee.name.last.toUpperCase().includes(uppercaseSearchName)) {\n          return employee;\n        }\n      });\n      console.log(filteredEmployees);\n      this.setState({\n        employees: filteredEmployees\n      });\n    };\n\n    this.sortNames = () => {\n      console.log(\"name\");\n      let sortedEmployees = this.state.employees;\n      console.log(sortedEmployees);\n      sortedEmployees.sort(function (a, b) {\n        let nameA = a.name.first.toUpperCase();\n        let nameB = b.name.first.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        employees: sortedEmployees\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        employees: this.state.employees,\n        sortNames: this.sortNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/sarahbrand/Homework/19/my-app/Employee-Directory/src/components/container.js"],"names":["React","Component","Search","API","Table","Container","state","employees","getEmployees","then","res","initialEmployeeList","data","results","setState","catch","err","console","log","handleInputChange","event","searchName","target","value","searchNames","filteredEmployees","filter","employee","uppercaseFirstName","name","first","toUpperCase","uppercaseSearchName","includes","last","sortNames","sortedEmployees","sort","a","b","nameA","nameB","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Search from './search'\nimport API from '../utils/API'\nimport Table from './table'\n\nclass Container extends Component {\n    state = { employees: [] }\n    initialEmployeelist;\n    componentDidMount() {\n        this.getEmployees()\n    }\n    getEmployees = () => {\n        API.getEmployees().then((res) => {\n            this.initialEmployeeList = res.data.results;\n            this.setState({ employees: res.data.results });\n        }).catch((err) => console.log(err))\n    }\n    handleInputChange = (event) => {\n        console.log(\"this.handleInputChange\")\n        const searchName = event.target.value\n        if (searchName) {\n            this.searchNames(searchName);\n        } else if (!searchName) {\n            this.setState({ employees: this.initialEmployeeList });\n        }\n    }\n    searchNames = (searchName) => {\n        const filteredEmployees = this.initialEmployeeList.filter((employee) => {\n            let uppercaseFirstName = employee.name.first.toUpperCase();\n            let uppercaseSearchName = searchName.toUpperCase();\n            if (\n                employee.name.first.toUpperCase().includes(uppercaseSearchName) ||\n                employee.name.last.toUpperCase().includes(uppercaseSearchName)\n            ) {\n                return employee;\n            }\n        });\n        console.log(filteredEmployees);\n        this.setState({ employees: filteredEmployees });\n    }\n    sortNames = () => {\n        console.log(\"name\")\n        let sortedEmployees = this.state.employees;\n        console.log(sortedEmployees);\n        sortedEmployees.sort(function (a, b) {\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n            return 0;\n        });\n        this.setState({ employees: sortedEmployees });\n    }\n    render() {\n        return (\n            <div>\n                <Search handleInputChange={this.handleInputChange} />\n                <Table employees={this.state.employees} sortNames={this.sortNames} />\n            </div>\n        )\n    }\n}\nexport default Container"]},"metadata":{},"sourceType":"module"}